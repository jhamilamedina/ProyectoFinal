{
  "title": "Dev Server options",
  "type": "object",
  "definitions": {
    "AllowedHosts": {
      "anyOf": [
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AllowedHostsItem"
          }
        },
        {
          "enum": ["auto", "all"]
        },
        {
          "$ref": "#/definitions/AllowedHostsItem"
        }
      ],
      "description": "Allows to enumerate the hosts from which access to the dev server are allowed (useful when you are proxying dev server, by default is 'auto').",
      "link": "https://webpack.js.org/configuration/dev-server/#devserverallowedhosts"
    },
    "AllowedHostsItem": {
      "type": "string",
      "minLength": 1
    },
    "Bonjour": {
      "anyOf": [
        {
          "type": "boolean",
          "cli": {
            "negatedDescription": "Disallows to broadcasts dev server via ZeroConf networking on start."
          }
        },
        {
          "type": "object",
          "description": "Options for bonjour.",
          "link": "https://github.com/watson/bonjour#initializing"
        }
      ],
      "description": "Allows to broadcasts dev server via ZeroConf networking on start.",
      "link": " https://webpack.js.org/configuration/dev-server/#devserverbonjour"
    },
    "Client": {
      "description": "Allows to specify options for client script in the browser or disable client script.",
      "link": "https://webpack.js.org/configuration/dev-server/#devserverclient",
      "anyOf": [
        {
          "enum": [false],
          "cli": {
            "negatedDescription": "Disables client script."
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "logging": {
              "$ref": "#/definitions/ClientLogging"
            },
            "overlay": {
              "$ref": "#/definitions/ClientOverlay"
            },
            "progress": {
              "$ref": "#/definitions/ClientProgress"
            },
            "reconnect": {
              "$ref": "#/definitions/ClientReconnect"
            },
            "webSocketTransport": {
              "$ref": "#/definitions/ClientWebSocketTransport"
            },
            "webSocketURL": {
              "$ref": "#/definitions/ClientWebSocketURL"
            }
          }
        }
      ]
    },
    "ClientLogging": {
      "enum": ["none", "error", "warn", "info", "log", "verbose"],
      "description": "Allows to set log level in the browser.",
      "link": "https://webpack.js.org/configuration/dev-server/#logging"
    },
    "ClientOverlay": {
      "anyOf": [
        {
          "description": "Enables a full-screen overlay in the browser when there are compiler errors or warnings.",
          "link": "https://webpack.js.org/configuration/dev-server/#overlay",
          "type": "boolean",
          "cli": {
            "negatedDescription": "Disables the full-screen overlay in the browser when there are compiler errors or warnings."
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "errors": {
              "anyOf": [
                {
                  "description": "Enables a full-screen overlay in the browser when there are compiler errors.",
                  "type": "boolean",
                  "cli": {
                    "negatedDescription": "Disables the full-screen overlay in the browser when there are compiler errors."
                  }
                },
                {
                  "instanceof": "Function",
                  "description": "Filter compiler errors. Return true to include and return false to exclude."
                }
              ]
            },
            "warnings": {
              "anyOf": [
                {
                  "description": "Enables a full-screen overlay in the browser when there are compiler warnings.",
                  "type": "boolean",
                  "cli": {
                    "negatedDescription": "Disables the full-screen overlay in the browser when there are compiler warnings."
                  }
                },
                {
                  "instanceof": "Function",
                  "description": "Filter compiler warnings. Return true to include and return false to exclude."
                }
              ]
            },
            "runtimeErrors": {
              "anyOf": [
                {
                  "description": "Enables a full-screen overlay in the browser when there are uncaught runtime errors.",
                  "type": "boolean",
                  "cli": {
                    "negatedDescription": "Disables the full-screen overlay in the browser when there are uncaught runtime errors."
                  }
                },
                {
                  "instanceof": "Function",
                  "description": "Filter uncaught runtime errors. Return true to include and return false to exclude."
                }
              ]
            },
            "trustedTypesPolicyName": {
              "description": "The name of a Trusted Types policy for the overlay. Defaults to 'webpack-dev-server#overlay'.",
              "type": "string"
            }
          }
        }
      ]
    },
    "ClientProgress": {
      "description": "Prints compilation progress in percentage in the browser.",
      "link": "https://webpack.js.org/configuration/dev-server/#progress",
      "type": "boolean",
      "cli": {
        "negatedDescription": "Does not print compilation progress in percentage in the browser."
      }
    },
    "ClientReconnect": {
      "description": "Tells dev-server the number of times it should try to reconnect the client.",
      "link": "https://webpack.js.org/configuration/dev-server/#reconnect",
      "anyOf": [
        {
          "type": "boolean",
          "cli": {
            "negatedDescription": "Tells dev-server to not to try to reconnect the client."
          }
        },
        {
          "type": "number",
          "minimum": 0
        }
      ]
    },
    "ClientWebSocketTransport": {
      "anyOf": [
        {
          "$ref": "#/definitions/ClientWebSocketTransportEnum"
        },
        {
          "$ref": "#/definitions/ClientWebSocketTransportString"
        }
      ],
      "description": "Allows to set custom web socket transport to communicate with dev server.",
      "link": "https://webpack.js.org/configuration/dev-server/#websockettransport"
    },
    "ClientWebSocketTransportEnum": {
      "enum": ["sockjs", "ws"]
    },
    "ClientWebSocketTransportString": {
      "type": "string",
      "minLength": 1
    },
    "ClientWebSocketURL": {
      "description": "Allows to specify URL to web socket server (useful when you're proxying dev server and client script does not always know where to connect to).",
      "link": "https://webpack.js.org/configuration/dev-server/#websocketurl",
      "anyOf": [
        {
          "type": "string",
          "minLength": 1
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "hostname": {
              "description": "Tells clients connected to devServer to use the provided hostname.",
              "type": "string",
              "minLength": 1
            },
            "pathname": {
              "description": "Tells clients connected to devServer to use the provided path to connect.",
              "type": "string"
            },
            "password": {
              "description": "Tells clients connected to devServer to use the provided password to authenticate.",
              "type": "string"
            },
            "port": {
              "description": "Tells clients connected to devServer to use the provided port.",
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string",
                  "minLength": 1
                }
              ]
            },
            "protocol": {
              "description": "Tells clients connected to devServer to use the provided protocol.",
              "anyOf": [
                {
                  "enum": ["auto"]
                },
                {
                  "type": "string",
                  "minLength": 1
                }
              ]
            },
            "username": {
              "description": "Tells clients connected to devServer to use the provided username to authenticate.",
              "type": "string"
            }
          }
        }
      ]
    },
    "Compress": {
      "type": "boolean",
      "description": "Enables gzip compression for everything served.",
      "link": "https://webpack.js.org/configuration/dev-server/#devservercompress",
      "cli": {
        "negatedDescription": "Disables gzip compression for everything served."
      }
    },
    "DevMiddleware": {
      "description": "Provide options to 'webpack-dev-middleware' which handles webpack assets.",
      "link": "https://webpack.js.org/configuration/dev-server/#devserverdevmiddleware",
      "type": "object",
      "additionalProperties": true
    },
    "HTTP2": {
      "type": "boolean",
      "description": "Allows to serve over HTTP/2 using SPDY. Deprecated, use the `server` option.",
      "link": "https://webpack.js.org/configuration/dev-server/#devserverhttp2",
      "cli": {
        "negatedDescription": "Does not serve over HTTP/2 using SPDY."
      }
    },
    "HTTPS": {
      "anyOf": [
        {
          "type": "boolean",
          "cli": {
            "negatedDescription": "Disallows to configure the server's listening socket for TLS (by default, dev server will be served over HTTP)."
          }
        },
        {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "passphrase": {
              "type": "string",
              "description": "Passphrase for a pfx file. Deprecated, use the `server.options.passphrase` option."
            },
            "requestCert": {
              "type": "boolean",
              "description": "Request for an SSL certificate. Deprecated, use the `server.options.requestCert` option.",
              "cli": {
                "negatedDescription": "Does not request for an SSL certificate."
              }
            },
            "ca": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "instanceof": "Buffer"
                      }
                    ]
                  }
                },
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option."
            },
            "cacert": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "instanceof": "Buffer"
                      }
                    ]
                  }
                },
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option."
            },
            "cert": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "instanceof": "Buffer"
                      }
                    ]
                  }
                },
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to an SSL certificate or content of an SSL certificate. Deprecated, use the `server.options.cert` option."
            },
            "crl": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "instanceof": "Buffer"
                      }
                    ]
                  }
                },
                {
                  "type": "string"
                },
                {
                  "instanceof": "Buffer"
                }
              ],
              "description": "Path to PEM formatted CRLs (Certificate Revocation Lists) or content of PEM formatted CRLs (Certificate Revocation Lists). Deprecated, use the `server.options.crl` option."
            },
            "key": {
              "anyOf": [
                {
                  "type": "